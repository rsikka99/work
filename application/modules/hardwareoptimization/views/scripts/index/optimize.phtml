<?php
/* @var $hardwareOptimization Hardwareoptimization_Model_Hardware_Optimization */
$hardwareOptimization = $this->hardwareOptimization;
/* @var $optimization Hardwareoptimization_ViewModel_Optimization */
$optimization = $this->optmizationViewModel;
/* @var $form Proposalgen_Form_DeviceSwapChoice */
$form = $this->form;

$thresholdPercent = 30;
$targetBlackCPP = (float)$hardwareOptimization->getHardwareOptimizationSetting()->targetMonochromeCostPerPage;
$thresholdBlackCpp = $targetBlackCPP * (1 - ($thresholdPercent / 100));
$targetColorCPP = (float)$hardwareOptimization->getHardwareOptimizationSetting()->targetColorCostPerPage;
$thresholdColorCpp = $targetColorCPP * (1 - ($thresholdPercent / 100));

$formActions [] = $form->getElement('ResetReplacements');
$formActions [] = $form->getElement('Submit');
$formActions [] = $form->getElement('Analyze');
?>

<br />
<!-- Begin Optimization Summary table -->
<div id="optimizationSummary" style="position: relative">
    <div id="loadingDiv" style="position: absolute; height: 100%; width: 100%; top: 0; left:0; background-color: rgb(255,255,255);">
        <div class="AjaxLoadingIcon"></div>
    </div>
    <table class='table table-condensed' style="width: 100%">
        <thead>
        <tr class='header'>
            <td><strong>Fleet</strong></td>
            <td><strong>Weighted Monochrome CPP</strong></td>
            <td><strong>Weighted Color CPP</strong></td>
            <td><strong>Total Cost</strong></td>
            <td><strong>Margin $</strong></td>
            <td><strong>Margin %</strong></td>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td> Current</td>
            <td><?php echo $this->currency($optimization->calculateDealerWeightedAverageMonthlyCostPerPage()->monochromeCostPerPage, array('precision' => 4)); ?></td>
            <td><?php echo ($optimization->calculateDealerWeightedAverageMonthlyCostPerPage()->colorCostPerPage > 0) ? $this->currency($optimization->calculateDealerWeightedAverageMonthlyCostPerPage()->colorCostPerPage, array('precision' => 4)) : 'N/A'; ?></td>
            <td><?php echo $this->currency($optimization->calculateDealerMonthlyCost()); ?></td>
            <td><?php echo $this->currency($optimization->calculateDealerMonthlyProfitUsingTargetCostPerPage()); ?></td>
            <td><?php echo number_format(Tangent_Accounting::reverseEngineerMargin((float)$optimization->calculateDealerMonthlyCost(), (float)$optimization->calculateDealerMonthlyRevenueUsingTargetCostPerPage()), 2); ?>
                %
            </td>
        </tr>
        <tr>
            <td> Optimized</td>
            <td id="monochromeCpp"><?php echo $this->currency((float)$optimization->calculateDealerWeightedAverageMonthlyCostPerPageWithReplacements()->monochromeCostPerPage, array('precision' => 4)) ?></td>
            <td id="colorCpp"><?php echo ((float)$optimization->calculateDealerWeightedAverageMonthlyCostPerPageWithReplacements()->colorCostPerPage > 0) ? $this->currency((float)$optimization->calculateDealerWeightedAverageMonthlyCostPerPageWithReplacements()->colorCostPerPage, array('precision' => 4)) : 'N/A'; ?></td>
            <td id="totalCost"><?php echo $this->currency((float)$optimization->calculateDealerMonthlyCostWithReplacements(), array('precision' => 2)) ?></td>
            <td id="marginDollar"><?php echo $this->currency((float)$optimization->calculateDealerMonthlyProfitUsingTargetCostPerPageAndReplacements(), array('precision' => 2)) ?></td>
            <td id="marginPercent"><?php echo number_format(Tangent_Accounting::reverseEngineerMargin((float)$optimization->calculateDealerMonthlyCostWithReplacements(), (float)$optimization->calculateDealerMonthlyRevenueUsingTargetCostPerPage()), 2) ?>
                %
            </td>
        </tr>
        </tbody>
    </table>
</div>


<form id="<?php echo $form->getId(); ?>" class='<?php echo $form->getAttrib('class') ?>' action="<?php echo $form->getAction() ?>" method="<?php echo $form->getMethod() ?>" name="<?php echo $form->getName() ?>">
    <div class='replacementDevices'>
        <?php
        $costPerPageSetting = $optimization->getCostPerPageSettingForDealer();
        $jsonRows = array();
        $deviceCount = 0;
        /* @var $deviceInstance Proposalgen_Model_DeviceInstance */
        foreach ($optimization->getDevices()->purchasedDeviceInstances->getDeviceInstances() as $deviceInstance) :
            $deviceCount++;
            $replacementDeviceElement = $form->getElement("deviceInstance_{$deviceInstance->id}");

            // Cpp used to show and threshold cpp
            $deviceCostPerPage = $deviceInstance->calculateCostPerPage($costPerPageSetting);

            // Get the manufacturer from the master device
            $masterDevice     = $deviceInstance->getMasterDevice();
            $manufacturerName = $masterDevice->getManufacturer()->fullname;
            // Check to see if there is a monthly color volume
            $monthlyColorVolume = ($deviceInstance->getPageCounts()->color->getMonthly() > 0) ? number_format($deviceInstance->getPageCounts()->color->getMonthly()) : 'N/A';
            $isDeviceColor      = ($deviceInstance->getMasterDevice()->tonerConfigId !== Proposalgen_Model_TonerConfig::BLACK_ONLY) ? true : false;
            // Device costs
            $deviceInstanceMonthlyCost = $deviceInstance->calculateMonthlyCost($costPerPageSetting);
            $costDelta                 = $deviceInstanceMonthlyCost - $deviceInstance->calculateMonthlyCost($costPerPageSetting, $deviceInstance->getReplacementMasterDeviceForHardwareOptimization($hardwareOptimization->id));

            $rowJson    = array(
                'deviceInstanceId' => $deviceInstance->id,
                'isColor'          => (int)$isDeviceColor,
                'device'           => "{$manufacturerName}<br/>{$masterDevice->modelName}",
                'monoAmpv'         => number_format($deviceInstance->getPageCounts()->monochrome->getMonthly()),
                'colorAmpv'        => $monthlyColorVolume,
                'monoCpp'          => $this->currency((float)$deviceCostPerPage->monochromeCostPerPage, array('precision' => 4)),
                'colorCpp'         => ($isDeviceColor) ? $this->currency($deviceCostPerPage->colorCostPerPage, array('precision' => 4)) : 'N/A',
                'monthlyCost'      => $this->currency($deviceInstanceMonthlyCost, array('precision' => 2)),
                'action'           => $replacementDeviceElement->renderViewHelper(),
                'costDelta'        => $this->currency($costDelta, array('precision' => 2)),
                'rawCostDelta'     => $costDelta,
                'reason'           => $deviceInstance->getReason(),
            );
            $jsonRows[] = $rowJson;
            ?>
        <?php endforeach; ?>
        <!-- Form Actions -->
        <div class="clearfix">
            <?php foreach ($formActions as $element) : ?>
                <?php echo $element->renderViewHelper(); ?>
            <?php endforeach; ?>
        </div>
        <em>The following <?php echo $deviceCount; ?> out of <?php echo $optimization->getDevices()->allIncludedDeviceInstances->getCount(); ?> devices are
            eligible for potential optimization.</em>
        <br />
        <!-- End Form Actions -->
        <table id='replacementDeviceTable' style="width: 100%" class="scroll">
            <tr>
                <td></td>
            </tr>
        </table>
    </div>
</form>

<!-- Begin target cost per page table -->
<table class="table">
    <tbody>
    <tr>
        <td>
            <strong>Target Monochrome CPP
                : </strong><?php echo $this->currency((float)$hardwareOptimization->getHardwareOptimizationSetting()->targetMonochromeCostPerPage, array('precision' => 4)); ?>
        </td>
        <td>
            <strong>Target Color CPP
                : </strong><?php echo $this->currency((float)$hardwareOptimization->getHardwareOptimizationSetting()->targetColorCostPerPage, array('precision' => 4)); ?>
        </td>
        <td>
            <strong>Cost Threshold : </strong><?php echo $this->currency((float)$hardwareOptimization->getHardwareOptimizationSetting()->costThreshold); ?>
        </td>
        <td><strong>Total
                Revenue: </strong><?php echo $this->currency((float)$optimization->calculateDealerMonthlyRevenueUsingTargetCostPerPage(), array('precision' => 2)) ?>
        </td>
    </tr>
    </tbody>
</table>
<!-- End target cost per page table -->

<?php $this->headScript()->captureStart('append', 'text/javascript'); ?>

var targetCostPerPageMono               = <?php echo $targetBlackCPP; ?>;
var targetCostPerPageMonoThreshold      = <?php echo $thresholdBlackCpp; ?>;
var targetCostPerPageColor              = <?php echo $targetColorCPP; ?>;
var targetCostPerPageColorThreshold     = <?php echo $thresholdColorCpp; ?>;
var jsonRows                            = <?php echo json_encode($jsonRows); ?>;
var deviceListUrl                       = '<?php echo $this->baseUrl('hardwareoptimization/index/get-device-by-device-instance-id'); ?>'

<?php $this->headScript()->captureEnd(); ?>
<?php $this->headScript()->appendFile($this->baseUrl('/js/proposalgen/optimization/deviceListing.js')); ?>
<div id="deviceInstanceInformationModal">
    <table id="replacementInformationModalTable" style="width: 300px; float: right; border:1px solid black;">
    </table>
    <table id="deviceInstanceInformationModalTable" style="width: 300px; border:1px solid black;">
    </table>
    <p id="replacementReason"></p>
</div>
<?php echo $this->navigationForm; ?>

