<?php
/**
 * managemypricing.phtml
 * Allows the user to manage their own specific pricing which overrides the master pricing
 * 
 * @author	John Sadler
 * @version	v1.0 
 */
?>

<?php $this->headScript()->captureStart('append','text/javascript') ?>
	var repop = '<?php echo $this->repop; ?>';
	
	(function( $ ) {
		$.widget( "ui.combobox", {
			_create: function() {
				var self = this,
					select = this.element.hide(),
					selected = select.children( ":selected" ),
					value = selected.val() ? selected.text() : "";
				var input = this.input = $( "<input size='26'>" )
					.insertAfter( select )
					.val( value )
					.autocomplete({
						delay: 0,
						minLength: 0,
						source: function( request, response ) {
							var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
							response( select.children( "option" ).map(function() {
								var text = $( this ).text();
								if ( this.value && ( !request.term || matcher.test(text) ) )
									return {
										label: text.replace(
											new RegExp(
												"(?![^&;]+;)(?!<[^<>]*)(" +
												$.ui.autocomplete.escapeRegex(request.term) +
												")(?![^<>]*>)(?![^&;]+;)", "gi"
											), "<strong>$1</strong>" ),
										value: text,
										option: this
									};
							}) );
						},
						select: function( event, ui ) {
							ui.item.option.selected = true;
							self._trigger( "selected", event, {
								item: ui.item.option
							});
						},
						change: function( event, ui ) {
							if ( !ui.item ) {
								var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( $(this).val() ) + "$", "i" ),
									valid = false;
								select.children( "option" ).each(function() {
									if ( $( this ).text().match( matcher ) ) {
										this.selected = valid = true;
										return false;
									}
								});
								if ( !valid ) {
									// remove invalid value, as it didn't match anything
									$( this ).val( "" );
									select.val( "" );
									input.data( "autocomplete" ).term = "";
									return false;
								}
							}
						}
					})
					.addClass( "ui-widget ui-widget-content ui-corner-left" );

				input.data( "autocomplete" )._renderItem = function( ul, item ) {
					return $( "<li></li>" )
						.data( "item.autocomplete", item )
						.append( "<a>" + item.label + "</a>" )
						.appendTo( ul );
				};

				this.button = $( "<button type='button'>&nbsp;</button>" )
					.attr( "tabIndex", -1 )
					.attr( "title", "Show All Items" )
					.insertAfter( input )
					.button({
						icons: {
							primary: "ui-icon-triangle-1-s"
						},
						text: false
					})
					.removeClass( "ui-corner-all" )
					.addClass( "ui-corner-right ui-button-icon" )
					.click(function() {
						// close if already visible
						if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
							input.autocomplete( "close" );
							return;
						}

						// work around a bug (likely same cause as #5265)
						$( this ).blur();

						// pass empty string as value to search for, displaying all results
						input.autocomplete( "search", "" );
						input.focus();
					});
			},

			destroy: function() {
				this.input.remove();
				this.button.remove();
				this.element.show();
				$.Widget.prototype.destroy.call( this );
			}
		});
	})( jQuery );
	
	$(document).ready(function() {
	
		//find center screen for modal popup
		var sTop = ($(window).height()/2)-100;
		var sLeft = ($(window).width()/2)-200;
		var master_device_id = $("#printer_model").val();
		
		jQuery("#partslist").jqGrid({
			url:'<?php echo $this->baseUrl(); ?>/admin/mytoners?deviceid='+master_device_id,
			datatype:'json',
			colNames:['Toner ID','SKU','Type','Color','Yield','Default Price', 'Override Price','ManufacturerID','MasterID'],
			colModel:[
        		{name:'toner_id',index:'toner_id',width:100,sorttype:"int",hidden:true},
				{name:'toner_sku',index:'toner_sku',width:100,editable:false},
				{name:'type_name',index:'type_name',width:100,editable:false},
				{name:'toner_color_name',index:'toner_color_name',width:100},
				{name:'toner_yield',index:'toner_yield',width:60,editable:true,align:'right'},
				{name:'toner_price',index:'toner_price',width:80,editable:true,align:'right', formatter:'currency', align:'right', formatoptions:{prefix:"$",thousandsSeparator:","}},
				{name:'override_price',index:'override_price',width:80,align:'right'},
				{name:'manufacturer_id',index:'manufacturer_id',width:100,sorttype:"int",hidden:true,editoptions:{value:$("#manufacturer_id").val()}},
				{name:'master_device_id',index:'master_device_id',width:100,sorttype:"int",hidden:true,editoptions:{value:$("#printer_model").val()}}
			],
			width:615,
			height:100,
			sortname:'toner_sku',
			sortorder:'asc',
			gridComplete:function(){ 
				var toner_array = "";
				var ids = jQuery("#partslist").jqGrid('getDataIDs');
				
				for(var i=0; i < ids.length; i++) { 
					var cur_row = ids[i];
					var toner_id = document.getElementById("partslist").rows[i+1].cells[0].innerHTML;
					var override_price = document.getElementById("partslist").rows[i+1].cells[6].innerHTML.replace("$","").replace(/,/gi,"").replace(/ /gi,"");
					if(override_price == 0) {
						override_price = '';
					}
					
					if(toner_array != "") {
						toner_array = toner_array + ",";
					}
					toner_array = toner_array + "'" + toner_id + ":" + override_price + "'";
					
					hidden_price_element = "<input type='hidden' name='hdnPrice"+cur_row+"' id='hdnPrice"+cur_row+"' value='"+override_price+"' size='4' />"; 
					override_price_element = "$ <input type='text' name='txtPrice"+cur_row+"' id='txtPrice"+cur_row+"' size='8' maxlength='12' value='"+override_price+"' style='text-align:right;' onkeypress='javascript: return numbersonly(this, event);' onblur='javascript: update_toner_arary("+cur_row+","+toner_id+",this.value);' />";
					jQuery("#partslist").jqGrid('setRowData',ids[i],{override_price:hidden_price_element + override_price_element}); 
				}
				$("#toner_array").val(toner_array);
			},
			editurl:'dummy.php'
		});
		
		jQuery("#partslist").jqGrid('navGrid','#partspager',
				{add:false, del:false, edit:true, refresh:false, search:false},
				{closeAfterEdit:false, recreateForm:true, reloadAfterSubmit:true, closeOnEscape:true, width:400, top:sTop, left:sLeft,
					afterSubmit:function(response, postdata) { 
						if(response.responseText) {
							$("#FormError > td","#editcntpartslist").html(response.responseText).show();
							$("#FormError").css('display','table-row');
							return false;
						}
						return true;
					}
				},
				{closeAfterAdd:true,recreateForm:true,closeOnEscape:true,width:400,top:sTop,left:sLeft},
				{},
				{},
				{}
		);
				
		$("#manufacturer_id").change(function(event) {
		    //empty and hide the error message box
		    $('.display-error').empty();
		    $('.display-error').hide();
			
		    var manufacturerid = $("#manufacturer_id").val();
		    var url = '<?php echo $this->baseUrl(); ?>/admin/printermodels?manufacturerid='+manufacturerid;
			
			//always hide parts until model is selected
			document.getElementById("parts_container").style.display = "none";
		    
			$.ajax ({
				type: "POST",
				contentType: "application/json; charset=utf-8",
		        url: url,
				dataType: "json",
				success: function(models) {
				    //empty out printer_model
				    $("#printer_model").html('');
				    
					var listItems= "";
					var selected = '<?php echo $this->printer_model; ?>';
					
					for (var i = 0; i < models.rows.length; i++){
						selected_code = "";
						if(selected && selected == models.rows[i].cell[0]) {
							selected_code = " selected ";
						}
						listItems+= "<option value='" + models.rows[i].cell[0] + "'" + selected_code + ">" + models.rows[i].cell[1] + "</option>";
					}
					$("#printer_model").html(listItems);
					$("#printer_model").combobox("destroy");
					$("#printer_model").combobox({
						selected: function(event,ui) {
							if(repop != 1) {empty_form();}
							$("#printer_model").change();
						}
					});
				},
				error: function() {
					alert("ERROR IN PRINTERMODELS");
				},
				complete: function() {
					$("#printer_model").change();
				}
			});
		});
	
		$("#printer_model").change(function(event) {
		    //empty and hide the error message box
		    $('.display-error').empty();
		    $('.display-error').hide();
			
		    var master_device_id = $("#printer_model").val();
		    
		    //GET DEVICE DETAILS
		    $.ajax({
		        beforeSend: function() {
		            //disable form elements while loading new info
		            $("#device_price").attr('disabled', 'disabled');
		            $("#override_price").attr('disabled', 'disabled');
		        },
		        url: '<?php echo $this->baseUrl(); ?>/admin/mydevicedetails?deviceid='+master_device_id,
		        success: function(data) {
		            var obj = jQuery.parseJSON(data);
		            $("#device_price").val(obj.device_price);
		            if(obj.override_price > 0) {$("#override_price").val(obj.override_price);}
		            
				    $('#partslist').setGridParam({url:'<?php echo $this->baseUrl(); ?>/admin/mytoners?deviceid='+master_device_id});
				    $('#partslist').trigger("reloadGrid");
		        },
		        error: function() {
		            alert("ERROR IN DEVICEDETAILS");
		        },
		        complete: function() {
		            //enable form elements after they are filled
		            $("#device_price").removeAttr('disabled');
		            $("#override_price").removeAttr('disabled');
		            					
					//update label
				    var manufacturer = $("#manufacturer_id option:selected").text();
				    var model = $("#printer_model option:selected").text();
					$("#devicename").html(manufacturer + ' ' + model);
					
					if(model != '') {
						document.getElementById("parts_container").style.display = "block";
					}
		        }
		    });
		});
			
		$(function() {
			$("#manufacturer_id").combobox({
				selected: function(event,ui) {
					if(repop != 1) {empty_form();}
					$("#manufacturer_id").change();
				}
			});
		});
			
		//hide by default
		$("#manufacturer_id").change();
		
		//always hide add new printer link
		document.getElementById("add_link").style.display = "none";
	});
	
	function empty_form() {
		$("#override_price").val('');
	}
	
	function do_action(inAction) {
		switch(inAction) {
			case 'save':
				$("#save_flag").val('save');
				$("#device_form").submit();
				break;
			case 'done':
				document.location.href='<?php echo $this->baseUrl()."/admin"?>';;
				break;
		}
	}
	
	function update_toner_arary(row,id,value) {
		old_price = $("#hdnPrice"+row).val();
		toner_array = $("#toner_array").val();
		
		//update
		toner_array = toner_array.replace("'"+id+":"+old_price+"'","'"+id+":"+value+"'");
		
		$("#toner_array").val(toner_array);
		$("#hdnPrice"+row).val(value);
	}
		
<?php $this->headScript()->captureEnd() ?>

<h2><?php echo $this->title;?></h2>

<div id="form_container">
	
	<div id="message_container" class="margined">
		<?php if($this->message) echo $this->escape($this->message); ?>
	</div>
			
	<div id="device_container" class="margined">
		<h3 style="display: inline;">Printers:</h3>
		<?php echo $this->deviceform; ?>
	</div>
	
	<div id="parts_container" class="margined" style="width: 550px; display: none;">
		<h3 class="margined">Toners for <span id="devicename">Printer</span>:</h3>
		<table id="partslist"></table>
		<div id="partspager"></div>
	</div>
	
	<div class="submitBar">
		<div id="submitBtns">
			<div class="savebtn">
				<input type="button" name="btnUpdate" id="btnUpdate" value="Update" onclick="javascript: do_action('save');" />
			</div>
			<div class="backbtn">
				<input type="button" name="btnDone" id="btnDone" value="Done" onClick="javascript: do_action('done');" />
			</div>
		</div>
	</div>
	
</div>
