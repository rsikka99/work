<?php
/**
 * Healthcheck - Analysis: Service and Supplies Logistics
 */

/* @var $phpWord \PhpOffice\PhpWord\PhpWord */
$phpWord = $this->phpword;

/* @var $section \PhpOffice\PhpWord\Element\Section */
$section = $this->section;

/* @var $healthcheckViewModel Healthcheck_ViewModel_Healthcheck */
$healthcheckViewModel = $this->healthcheckViewModel;
$graphs               = $healthcheckViewModel->getGraphs();

$section->addTitle('Printing Device Management Breakdown', 2);

$section->addText('Different types of printing devices are managed in different ways. Newer networked printers can be managed with remote monitoring software; leased multifunction devices are typically managed by the vendor who sold the machine; devices not connected to the network, such as inkjets and some older printers, are difficult to manage because you cannot monitor them with software.');

$section->addTextBreak(2);
$imageTable = $section->addTable($this->styles->tables->doubleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell1)->addImage($graphs["UnmanagedVsManagedDevices"]);
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell2)->addImage($graphs['PagesWithOrWithoutJIT']);
$section->addTextBreak(2);

$section->addTitle('Number of Printing Device Models and Supply Types', 2);

$section->addText(sprintf('Out of your %1$s networked printing devices, you have %2$s unique %3$s. Each section of the chart below represents a single model type. Models with less than or equal to 0.7%% of the total device count are put into the "Other" group.',
    number_format(count($healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getDeviceInstances())),
    number_format($healthcheckViewModel->getNumberOfUniqueModels()),
    (number_format($healthcheckViewModel->getNumberOfUniqueModels()) == 1) ? 'model' : 'models'
));

$imageTable = $section->addTable($this->styles->tables->singleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(9428, $this->styles->tables->singleimage->cell1)->addImage($graphs['UniqueDevicesGraph'], ['align' => 'center']);


//HERE IS NEW TABLE
$section->addTextBreak();
$uniqueDeviceArray = $healthcheckViewModel->getUniqueDeviceCountArray();
$totalAmount       = $healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getCount();
$amountOfRows      = ceil(count($uniqueDeviceArray) / 2);
//FirstHalf is whether we are writing to the left side of the table or the right side.
$firstColumn  = true;
$colorCounter = 0;
$tableData    = [];
$counter      = 0;

foreach ($uniqueDeviceArray as $modelName => $deviceCount)
{
    if ($counter < $amountOfRows)
    {
        $tableData[$counter]["column1"] = [
            "color"   => Healthcheck_ViewModel_Healthcheck::$COLOR_ARRAY[$counter],
            "name"    => $modelName . " (" . $deviceCount . ")",
            "percent" => number_format(($deviceCount / $totalAmount) * 100, 1) . "%",
        ];
    }
    else
    {
        $tableData[$counter - $amountOfRows]["column2"] = [
            "color"   => Healthcheck_ViewModel_Healthcheck::$COLOR_ARRAY[$counter],
            "name"    => $modelName . " (" . $deviceCount . ")",
            "percent" => number_format(($deviceCount / $totalAmount) * 100, 1) . "%",
        ];

    }
    $counter++;
}

$cellWidths = [
    500,
    3300,
    400,
    500,
    3300,
    400
];

$uniqueDevicesTable = $section->addTable($this->styles->tables->uniqueDevices->tablestyle);
foreach ($tableData as $row)
{
    $uniqueDevicesTable->addRow();
    if (array_key_exists("column1", $row))
    {
        $cellStyle = $this->styles->tables->uniqueDevices->firstCell;
        $cellStyle = array_merge($cellStyle, ["bgColor" => $row["column1"]["color"]]);
        $uniqueDevicesTable->addCell($cellWidths [0], $cellStyle);
        $uniqueDevicesTable->addCell($cellWidths [1], $this->styles->tables->uniqueDevices->middleCell)->addText($this->translate($row["column1"]["name"], null, null));
        $uniqueDevicesTable->addCell($cellWidths [2], $this->styles->tables->uniqueDevices->middleCell)->addText($row["column1"]["percent"]);
    }
    else
    {
        $uniqueDevicesTable->addCell($cellWidths [0], $this->styles->tables->uniqueDevices->firstCell);
        $uniqueDevicesTable->addCell($cellWidths [1], $this->styles->tables->uniqueDevices->middleCell);
        $uniqueDevicesTable->addCell($cellWidths [2], $this->styles->tables->uniqueDevices->middleCell);
    }

    if (array_key_exists("column2", $row))
    {
        $cellStyle = $this->styles->tables->uniqueDevices->middleCell;
        $cellStyle = array_merge($cellStyle, ["bgColor" => $row["column2"]["color"]]);
        $uniqueDevicesTable->addCell($cellWidths [3], $cellStyle);
        $uniqueDevicesTable->addCell($cellWidths [4], $this->styles->tables->uniqueDevices->middleCell)->addText($this->translate($row["column2"]["name"], null, null));
        $uniqueDevicesTable->addCell($cellWidths [5], $this->styles->tables->uniqueDevices->lastCell)->addText($row["column2"]["percent"]);
    }
    else
    {
        $uniqueDevicesTable->addCell($cellWidths [3], $this->styles->tables->uniqueDevices->middleCell);
        $uniqueDevicesTable->addCell($cellWidths [4], $this->styles->tables->uniqueDevices->middleCell);
        $uniqueDevicesTable->addCell($cellWidths [5], $this->styles->tables->uniqueDevices->lastCell);
    }
}

$section->addTextBreak(1);
$section->addText(sprintf('By using printing devices that use the same supplies, you can minimize the amount of operating cash held up in supplies inventory and the amount of storage space required. The %1$s program can provide you with just-in-time supplies fulfillment, which can further reduce your inventory requirements and emergency supply orders.'), $this->brandName);
$section->addTextBreak(2);
// END TABLE

$section->addTitle('Number of Printing Device Vendors', 2);

$section->addText(sprintf('Out of your %1$s networked printing devices, you have %2$s unique %3$s. Each section of the chart below represents a single vendor name.',
        $healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getCount(),
        count($healthcheckViewModel->getDeviceVendorCount()),
        (count($healthcheckViewModel->getDeviceVendorCount()) == 1) ? 'vendor' : 'vendors')
);
$imageTable = $section->addTable($this->styles->tables->singleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(9428, $this->styles->tables->singleimage->cell1)->addImage($graphs['PercentPerDeviceBrand'], ['align' => 'center']);

$section->addTitle(sprintf('Number of Printing Devices Compatible with %1$s', My_Brand::getDealerBranding()->mpsProgramName), 2);

$section->addText(sprintf('Out of your %1$s networked printing devices, you have %2$s that %3$s managed, %4$s that %5$s not compatible and %6$s %7$s compatible with %8$s. These non compatible devices are shown in the fleet attributes section below. A complete list of all devices and their %9$s compatibility can be found in the Appendix.',
    $healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getCount(),
    $healthcheckViewModel->getDevices()->isManagedDeviceInstances->getCount(),
    ($healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getCount() == 1) ? 'are' : 'is',
    $healthcheckViewModel->getDevices()->unmanagedDeviceInstances->getCount(),
    ($healthcheckViewModel->getDevices()->unmanagedDeviceInstances->getCount() == 1) ? 'is' : 'are',
    $healthcheckViewModel->getDevices()->compatibleDeviceInstances->getCount(),
    ($healthcheckViewModel->getDevices()->compatibleDeviceInstances->getCount() == 1) ? 'device' : 'devices',
    My_Brand::getDealerBranding()->mpsProgramName,
    My_Brand::$jit
));

$section->addTextBreak(2);
$imageTable = $section->addTable($this->styles->tables->doubleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell1)->addImage($graphs['ManagedVsNotJitVsJitDevices']);
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell2)->addImage($graphs['PagesPrintedManagedVsJitVsCompVsLeased']);
$cellWidths = [
    1528,
    1800
];