<?php
/**
 * Healthcheck - Analysis: Service and Supplies Logistics
 */

/* @var $phpWord PHPWord */
$phpWord = $this->phpword;

/* @var $section PHPWord_Section */
$section = $this->section;

/* @var $healthcheckViewModel Healthcheck_ViewModel_Healthcheck */
$healthcheckViewModel = $this->healthcheckViewModel;
$graphs               = $healthcheckViewModel->getGraphs();

$section->addTitle('Analysis: Service and Supplies Logistics', 1);
$section->addTitle('Printing Device Management Breakdown', 2);
$section->addText('Printing devices can be managed in different ways; networked printers can be managed with remote monitoring software; leased multifunction devices can be managed by a dealer who sold the machine; and devices not connected to the network, such as inkjets and some older printers, are difficult to manage because they may not be capable for remote monitoring.');
$section->addText('See below for results in your environment:');
$imageTable = $section->addTable($this->styles->tables->doubleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell1)->addImage($graphs["UnmanagedVsManagedDevices"]);
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell2)->addImage($graphs['PagesWithOrWithoutJIT']);
$section->addTextBreak(2);

$section->addTitle('Number of Printing Device Models and Supply Types', 2); //
$section->addText(sprintf('Out of your %1$s networked printing devices, you have of %2$s different models. Each section of the chart below represents a single model type.'
    , number_format(count($healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getDeviceInstances())) //1
    , number_format($healthcheckViewModel->getNumberOfUniqueModels()) //2
));

$imageTable = $section->addTable($this->styles->tables->singleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(9428, $this->styles->tables->singleimage->cell1)->addImage($graphs['UniqueDevicesGraph'], array('align' => 'center'));


//HERE IS NEW TABLE
$section->addTextBreak();
$uniqueDeviceArray = $healthcheckViewModel->getUniqueDeviceCountArray();
$totalAmount       = $healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getCount();
$amountOfRows      = ceil(count($uniqueDeviceArray) / 2);
//FirstHalf is whether we are writing to the left side of the table or the right side.
$firstColumn  = true;
$colorCounter = 0;
$tableData    = array();
$counter      = 0;

foreach ($uniqueDeviceArray as $modelName => $deviceCount)
{
    if ($counter < $amountOfRows)
    {
        $tableData[$counter]["column1"] = array(
            "color"   => Healthcheck_ViewModel_Healthcheck::$COLOR_ARRAY[$counter],
            "name"    => $modelName . " (" . $deviceCount . ")",
            "percent" => number_format(($deviceCount / $totalAmount) * 100, 1) . "%",
        );
    }
    else
    {
        $tableData[$counter - $amountOfRows]["column2"] = array(
            "color"   => Healthcheck_ViewModel_Healthcheck::$COLOR_ARRAY[$counter],
            "name"    => $modelName . " (" . $deviceCount . ")",
            "percent" => number_format(($deviceCount / $totalAmount) * 100, 1) . "%",
        );

    }
    $counter++;
}

$cellWidths = array(
    500,
    3300,
    400,
    500,
    3300,
    400
);

$uniqueDevicesTable = $section->addTable($this->styles->tables->uniqueDevices->tablestyle);
foreach ($tableData as $row)
{
    $uniqueDevicesTable->addRow();
    if (array_key_exists("column1", $row))
    {
        $cellStyle = $this->styles->tables->uniqueDevices->firstCell;
        $cellStyle = array_merge($cellStyle, array("bgColor" => $row["column1"]["color"]));
        $uniqueDevicesTable->addCell($cellWidths [0], $cellStyle);
        $uniqueDevicesTable->addCell($cellWidths [1], $this->styles->tables->uniqueDevices->middleCell)->addText($this->translate($row["column1"]["name"], null, null));
        $uniqueDevicesTable->addCell($cellWidths [2], $this->styles->tables->uniqueDevices->middleCell)->addText($row["column1"]["percent"]);
    }
    else
    {
        $uniqueDevicesTable->addCell($cellWidths [0], $this->styles->tables->uniqueDevices->firstCell);
        $uniqueDevicesTable->addCell($cellWidths [1], $this->styles->tables->uniqueDevices->middleCell);
        $uniqueDevicesTable->addCell($cellWidths [2], $this->styles->tables->uniqueDevices->middleCell);
    }

    if (array_key_exists("column2", $row))
    {
        $cellStyle = $this->styles->tables->uniqueDevices->middleCell;
        $cellStyle = array_merge($cellStyle, array("bgColor" => $row["column2"]["color"]));
        $uniqueDevicesTable->addCell($cellWidths [3], $cellStyle);
        $uniqueDevicesTable->addCell($cellWidths [4], $this->styles->tables->uniqueDevices->middleCell)->addText($this->translate($row["column2"]["name"], null, null));
        $uniqueDevicesTable->addCell($cellWidths [5], $this->styles->tables->uniqueDevices->lastCell)->addText($row["column2"]["percent"]);
    }
    else
    {
        $uniqueDevicesTable->addCell($cellWidths [3], $this->styles->tables->uniqueDevices->middleCell);
        $uniqueDevicesTable->addCell($cellWidths [4], $this->styles->tables->uniqueDevices->middleCell);
        $uniqueDevicesTable->addCell($cellWidths [5], $this->styles->tables->uniqueDevices->lastCell);
    }
}

$section->addTextBreak(1);
$section->addText(sprintf('By using printing devices that use the same supplies, you can reduce the amount of cash tied up in supplies inventory and the amount of storage space required. %1$s can provide you with just-in-time supplies fulfillment, which can further reduce your inventory requirements and emergency supply orders.',
        $this->companyName
    )
);
$section->addTextBreak(2);
// END TABLE

$section->addTitle('Number of Printing Vendors', 2);
$section->addText(sprintf('Out of your %1$s networked printing devices, you have %2$s different vendors. Each section of the chart below represents a single vendor name.'
    , $healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getCount()
    , count($healthcheckViewModel->getDeviceVendorCount())
));
$imageTable = $section->addTable($this->styles->tables->singleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(9428, $this->styles->tables->singleimage->cell1)->addImage($graphs['PercentPerDeviceBrand'], array('align' => 'center'));

$section->addTitle(sprintf('Number of Printing Devices Compatible with %1$s', $this->companyNameFull), 2);
$section->addText(sprintf('Out of your %1$s networked printing devices, you have %2$s that are managed, %3$s that are not compatible and %4$s devices compatible with %5$s. These non compatible devices are shown in the fleet attributes section below. A complete list of all devices and their %6$s compatibility can be found in the Appendix.'
    , $healthcheckViewModel->getDevices()->allIncludedDeviceInstances->getCount()
    , $healthcheckViewModel->getDevices()->isManagedDeviceInstances->getCount()
    , $healthcheckViewModel->getDevices()->unmanagedDeviceInstances->getCount()
    , $healthcheckViewModel->getDevices()->unmanagedJitCompatibleDeviceInstances->getCount()
    , $this->companyNameFull
    , My_Brand::$jit
));

$section->addTextBreak(2);
$imageTable = $section->addTable($this->styles->tables->doubleimage->tablestyle);
$imageTable->addRow();
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell1)->addImage($graphs['UnmanagedVsManagedDevices']);
$imageTable->addCell(4514, $this->styles->tables->doubleimage->cell2)->addImage($graphs['PagesWithOrWithoutJIT']);
$cellWidths = array(
    1528,
    1800
);
$section->addTextBreak(2);
$section->addTitle('Estimated OEM Toner Costs vs. Compatible Toner Costs', 2);
$section->addText(sprintf('From the review of your toner purchases, you are saving %1$s a month by moving from OEM to a compatible toner. Over the next 12 months you can save approximately %2$s. That is a %3$s%% savings for that time period.',
        $this->currency($healthcheckViewModel->calculateCurrentTonerOrderSavings()),
        $this->currency($healthcheckViewModel->calculateCurrentTonerOrderSavings() * 12),
    number_format($healthcheckViewModel->calculateCurrentTonerOrderSavingPercentage()))
);