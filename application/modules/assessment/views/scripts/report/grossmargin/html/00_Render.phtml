<?php
/* @var $assessmentViewModel Assessment_ViewModel_Assessment */
use MPSToolbox\Legacy\Modules\ProposalGenerator\Mappers\DealerTonerAttributeMapper;
use MPSToolbox\Legacy\Modules\ProposalGenerator\Models\DealerTonerAttributeModel;
use MPSToolbox\Legacy\Modules\ProposalGenerator\Models\TonerModel;
use MPSToolbox\Legacy\Modules\ProposalGenerator\Models\TonerColorModel;

$assessmentViewModel = $this->assessmentViewModel;
$brandName           = My_Brand::getDealerBranding()->mpsProgramName;
$companyName         = My_Brand::getDealerBranding()->shortDealerName;
$dealerId            = Zend_Auth::getInstance()->getIdentity()->dealerId;
?>
<div class="container full-width gross-margin" id="htmlReportContainer">
    <div>
        <h2 class="reportTitle">Gross Margin Report</h2><br />
        <em>AMPV = Average Monthly Page Volume</em>
    </div>

    <br />

    <table id="grossMarginInformation">
        <tbody>
        <tr>
            <td class="column1">
                <div class="heading"><?= $brandName ?> Black And White CPP:</div>
            </td>
            <td class="column2">
                <div><?= $this->formatCostPerPage($assessmentViewModel->getMPSBlackAndWhiteCPP()); ?></div>
            </td>
            <td class="column3">
                <div class="heading">Total Cost:</div>
            </td>
            <td class="column4">
                <div><?= $this->currency($assessmentViewModel->getGrossMarginTotalMonthlyCost()->Combined); ?></div>
            </td>
        </tr>
        <tr>
            <td class="column1">
                <div class="heading"><?= $brandName ?> Color CPP:</div>
            </td>
            <td class="column2">
                <div><?= $this->formatCostPerPage($assessmentViewModel->getMPSColorCPP()); ?></div>
            </td>
            <td class="column3">
                <div class="heading">Total Revenue:</div>
            </td>
            <td class="column4">
                <div><?= $this->currency($assessmentViewModel->getGrossMarginTotalMonthlyRevenue()->Combined); ?></div>
            </td>
        </tr>
        <tr>
            <td class="column1">
                <div class="heading">Weighted Black And White CPP:</div>
            </td>
            <td class="column2">
                <div><?= $this->formatCostPerPage($assessmentViewModel->getGrossMarginWeightedCPP()->BlackAndWhite); ?></div>
            </td>
            <td class="column3">
                <div class="heading">Monthly Profit:</div>
            </td>
            <td class="column4">
                <div><?= $this->currency($assessmentViewModel->getGrossMarginMonthlyProfit()); ?></div>
            </td>
        </tr>
        <tr>
            <td class="column1">
                <div class="heading">Weighted Color CPP:</div>
            </td>
            <td class="column2">
                <div><?= $this->formatCostPerPage($assessmentViewModel->getGrossMarginWeightedCPP()->Color); ?></div>
            </td>
            <td class="column3">
                <div class="heading">Overall Margin:</div>
            </td>
            <td class="column4">
                <div><?= number_format($assessmentViewModel->getGrossMarginOverallMargin()); ?>%</div>
            </td>
        </tr>
        <tr>
            <td class="column1">
                <div class="heading">Black And White Margin:</div>
            </td>
            <td class="column2">
                <div><?= number_format($assessmentViewModel->getGrossMarginBlackAndWhiteMargin()); ?>%</div>
            </td>
            <td class="column3">
                <div class="heading">Color Margin:</div>
            </td>
            <td class="column4"><?= number_format($assessmentViewModel->getGrossMarginColorMargin()); ?>%</td>
        </tr>
        </tbody>
    </table>

    <br />

    <div class="center">
        <em class="center">Yellow highlighted rows indicate devices that have not been assigned toners matching your selected first toner vendor preference.<br />
            For these devices the system has selected the best available alternative based on your preference.</em>
        <br /><br />
    </div>

    <table class="table" id="grossMarginDeviceSummary">
        <thead>
        <tr class="center">
            <th class="column1" rowspan="2">Device Name<br />(IP Address - Serial Number)
            </th>
            <th colspan="5">Black And White</th>
            <th colspan="5">Color</th>
            <th colspan="2">Toner SKUs</th>
        </tr>
        <tr class="center">
            <th class="column2">AMPV</th>
            <th class="column3">Toner Cost</th>
            <th class="column4">Toner Yield</th>
            <th class="column5">CPP</th>
            <th class="column6">Total Printing Cost</th>
            <th class="column7">AMPV</th>
            <th class="column8">Toner Cost</th>
            <th class="column9">Toner Yield</th>
            <th class="column10">CPP</th>
            <th class="column11">Total Printing Cost</th>
            <th class="column12"><?= My_Brand::$dealerSku; ?>s</th>
            <th class="column13">OEM SKUs</th>
        </tr>
        </thead>
        <tbody>
        <?php foreach ($assessmentViewModel->getDevices()->purchasedDeviceInstances->getDeviceInstances() as $deviceInstance) : ?>
            <?php
            $tonerConfig               = $deviceInstance->getMasterDevice()->tonerConfigId;
            $dealerCostPerPageSettings = $assessmentViewModel->getCostPerPageSettingForDealer();
            $completeMonoToners        = $deviceInstance->getMasterDevice()->getHasValidMonoGrossMarginToners($assessmentViewModel->getCostPerPageSettingForDealer());
            $completeColorToners       = $deviceInstance->getMasterDevice()->getHasValidColorGrossMarginToners($assessmentViewModel->getCostPerPageSettingForDealer());
            $blackToner                = null;
            $colorToner                = null;
            $toners                    = $deviceInstance->getMasterDevice()->getCheapestTonerSetByVendor($assessmentViewModel->getCostPerPageSettingForDealer());
            $tonerSkus                 = [];

            $black_isUsingDealerPricing = true;
            $color_isUsingDealerPricing = true;

            foreach ($toners as $toner)
            {

                #var_dump($toner);
                #die();

                $dealerTonerAttribute = DealerTonerAttributeMapper::getInstance()->findTonerAttributeByTonerId($toner->id, $dealerId);
                $dealerSku            = null;

                if ($dealerTonerAttribute instanceof DealerTonerAttributeModel)
                {
                    $dealerSku = $dealerTonerAttribute->dealerSku;
                }

                switch ($toner->tonerColorId)
                {
                    case TonerColorModel::BLACK:
                        $blackToner                      = $toner;
                        $tonerSkus['black']['sku']       = $toner->sku;
                        $tonerSkus['black']['dealerSku'] = $dealerSku;
                        $black_isUsingDealerPricing      = $toner->isUsingDealerPricing;
                        break;
                    case TonerColorModel::CYAN:
                        $colorToner                     = $toner;
                        $tonerSkus['cyan']['sku']       = $toner->sku;
                        $tonerSkus['cyan']['dealerSku'] = $dealerSku;
                        $color_isUsingDealerPricing     &= $toner->isUsingDealerPricing;
                        break;
                    case TonerColorModel::MAGENTA:
                        $tonerSkus['magenta']['sku']       = $toner->sku;
                        $tonerSkus['magenta']['dealerSku'] = $dealerSku;
                        $colorToner                        = $toner;
                        $color_isUsingDealerPricing     &= $toner->isUsingDealerPricing;
                        break;
                    case TonerColorModel::YELLOW:
                        $tonerSkus['yellow']['sku']       = $toner->sku;
                        $tonerSkus['yellow']['dealerSku'] = $dealerSku;
                        $colorToner                       = $toner;
                        $color_isUsingDealerPricing     &= $toner->isUsingDealerPricing;
                        break;
                    case TonerColorModel::THREE_COLOR:
                        $tonerSkus['threeColor']['sku']       = $toner->sku;
                        $tonerSkus['threeColor']['dealerSku'] = $dealerSku;
                        $colorToner                           = $toner;
                        $color_isUsingDealerPricing     &= $toner->isUsingDealerPricing;
                        break;
                    case TonerColorModel::FOUR_COLOR:
                        $tonerSkus['fourColor']['sku']       = $toner->sku;
                        $tonerSkus['fourColor']['dealerSku'] = $dealerSku;
                        $blackToner                          = $toner;
                        $colorToner                          = $toner;
                        $color_isUsingDealerPricing     &= $toner->isUsingDealerPricing;
                        break;
                    default:
                        break;
                }
            }

            // Black Toner
            $blackCost  = $this->currency($blackToner->calculatedCost);
            $blackYield = number_format($blackToner->yield);

            // Color Toner
            $colorCost  = "-";
            $colorStyle = "right";
            $colorYield = "-";
            $isColor    = false;
            if ($colorToner instanceof TonerModel)
            {
                $colorCost  = $this->currency($colorToner->cost);
                $colorYield = number_format($colorToner->yield);
                $isColor    = true;
            }

            $tr_class=[];
            if (!$completeMonoToners) $tr_class[] = 'nonCompliantMono';
            if (!$completeColorToners) $tr_class[] = 'nonCompliantColor';
            if (!$black_isUsingDealerPricing) $tr_class[] = 'redMono';
            if (!$color_isUsingDealerPricing) $tr_class[] = 'redColor';

            ?>
            <tr class="<?= implode(' ', $tr_class) ?>">
                <!-- Monochrome -->
                <td class="column1">
                    <div><?= str_ireplace("hewlett-packard", "HP", $deviceInstance->getDeviceName()) . "<br />(" . $deviceInstance->ipAddress . " - " . $deviceInstance->serialNumber . ")"; ?></div>
                </td>
                <td class="column2 mono">
                    <div class="right"><?= $this->formatPageVolume($deviceInstance->getPageCounts()->getBlackPageCount()->getMonthly()); ?></div>
                </td>

                <td class="column3 mono">
                    <div class="right"><?= $blackCost ?></div>
                </td>
                <td class="column4 mono">
                    <div class="right"><?= $blackYield ?></div>
                </td>
                <td class="column5 mono">
                    <div class="right"><?= $this->formatCostPerPage($deviceInstance->calculateCostPerPage($assessmentViewModel->getCostPerPageSettingForDealer())->getCostPerPage()->monochromeCostPerPage); ?></div>
                </td>
                <td class="column6 mono">
                    <div class="right">
                        <?= $this->currency($deviceInstance->getMonthlyBlackAndWhiteCost($assessmentViewModel->getCostPerPageSettingForDealer())); ?></div>
                </td>

                <!-- Color -->
                <td class="column7 color">
                    <div class="<?= $colorStyle; ?>"><?= ($isColor) ? $this->formatPageVolume($deviceInstance->getPageCounts()->getColorPageCount()->getMonthly()) : "-"; ?></div>
                </td>
                <td class="column8 color">
                    <div class="<?= $colorStyle; ?>"><?= $colorCost ?></div>
                </td>
                <td class="column9 color">
                    <div class="<?= $colorStyle; ?>"><?= $colorYield ?></div>
                </td>
                <td class="column10 color">
                    <div class="<?= $colorStyle; ?>"><?= ($isColor) ? $this->formatCostPerPage($deviceInstance->calculateCostPerPage($assessmentViewModel->getCostPerPageSettingForDealer())->getCostPerPage()->colorCostPerPage) : "-"; ?></div>
                </td>

                <td class="column11 color">
                    <div class="<?= $colorStyle; ?>"><?= ($isColor) ? $this->currency($deviceInstance->calculateMonthlyColorCost($assessmentViewModel->getCostPerPageSettingForDealer())) : "-"; ?></div>
                </td>
                <td class="column12">
                    <div class="<?= $colorStyle; ?>">
                        <?php
                        foreach ($tonerSkus as $tonerSku)
                        {
                            if (isset($tonerSku['dealerSku']))
                            {
                                echo $tonerSku['dealerSku'] . '<br />';
                            }
                            else
                            {
                                echo "-" . "<br />";
                            }
                        }
                        ?>
                    </div>
                </td>
                <td class="column12">
                    <div class="<?= $colorStyle; ?>">
                        <?php
                        foreach ($tonerSkus as $tonerSku)
                        {
                            echo $tonerSku['sku'] . '<br />';
                        }
                        ?>
                    </div>
                </td>
            </tr>
        <?php endforeach; ?>
        <tr class="totals">
            <td class="column1">
                <div>Totals for <?= number_format($assessmentViewModel->getDevices()->purchasedDeviceInstances->getCount()); ?> devices:</div>
            </td>
            <td>
                <div class="right"><?= $this->formatPageVolume($assessmentViewModel->getDevices()->purchasedDeviceInstances->getPageCounts()->getBlackPageCount()->getMonthly()); ?></div>
            </td>
            <td colspan="3"></td>
            <td class="column2">
                <div class="right"><?= $this->currency($assessmentViewModel->getGrossMarginTotalMonthlyCost()->BlackAndWhite); ?></div>
            </td>
            <td>
                <div class="center"><?= $this->formatPageVolume($assessmentViewModel->getDevices()->purchasedDeviceInstances->getPageCounts()->getColorPageCount()->getMonthly()); ?></div>
            </td>
            <td colspan="3"></td>
            <td>
                <div class="right"><?= $this->currency($assessmentViewModel->getGrossMarginTotalMonthlyCost()->Color); ?></div>
            </td>
            <td colspan="2"></td>
        </tr>
        </tbody>
    </table>
</div>