<?php
/* @var $phpword \PhpOffice\PhpWord\PhpWord */
$phpword = $this->phpword;

/* @var $assessmentViewModel Assessment_ViewModel_Assessment */
$assessmentViewModel = $this->assessmentViewModel;

// Initialize some properties
$properties = $phpword->getDocumentProperties();
$properties->setCreator('MPS Assessment Software');
$properties->setCompany('MPS Assessment Software');
$properties->setCategory('Dealer Report');
$properties->setTitle('Gross Margin Report');
$properties->setLastModifiedBy('MPS Assessment Software');
$properties->setCreated(time());
$properties->setModified(time());
$properties->setSubject('MPS Assessment Software');

/**
 * Define the different Sections
 */

// This section is landscape with 0.5" margins insead of 1"
$mainSection = $phpword->addSection([
    'orientation'  => 'landscape',
    'marginLeft'   => 720,
    'marginRight'  => 720,
    'marginTop'    => 720,
    'marginBottom' => 720
]);

/**
 * Define Global Paragraph Styles here
 */

$phpword->addParagraphStyle('nospacing', [
    'spaceBefore' => 0,
    'spaceAfter'  => 0
]);

$phpword->addParagraphStyle('nospacing_rightalign', [
    'align'       => 'right',
    'spaceBefore' => 0,
    'spaceAfter'  => 0
]);

$phpword->addParagraphStyle('nospacing_centeralign', [
    'align'       => 'center',
    'spaceBefore' => 0,
    'spaceAfter'  => 0
]);

$phpword->addParagraphStyle('centeralign', [
    'align' => 'right'
]);

$phpword->addParagraphStyle('rightalign', [
    'align' => 'right'
]);

/**
 * Define Global Font Styles here
 */

$phpword->addFontStyle('table_header', [
    'size' => 8,
    'bold' => true
]);

$phpword->addFontStyle('table_body', [
    'size' => 8
]);

$phpword->addFontStyle('table_footer', [
    'size' => 8,
    'bold' => true,
]);

$phpword->addFontStyle('bold_text', [
    'bold' => true
]);

$phpword->addFontStyle('italic_text', [
    'italic' => true
]);

/**
 * Define Global Heading (Title) Styles here
 */

// H1 Style
$phpword->addTitleStyle(1, [
    'size'  => 16,
    'color' => '000000',
    'bold'  => true
], [
    'borderBottomSize' => 1
]);
// H2 Style #5881BC
$phpword->addTitleStyle(2, [
    'size'  => 14,
    'color' => '000000',
    'bold'  => true
]);
// H3 Style #5881BC
$phpword->addTitleStyle(3, [
    'size'  => 12,
    'color' => '4F81BD',
    'bold'  => true
]);


/* LANDSCAPE FULL WIDTH TABLE = 16000 twips */
/* PORTRAIT FULL WIDTH TABLE = 10400 twips */

$settingsTable = (object)[
    "tablestyle" => [
        'cellMarginTop'    => 50,
        'cellMarginRight'  => 50,
        'cellMarginBottom' => 50,
        'cellMarginLeft'   => 50
    ],
    "rowheader"  => [
        'tblHeader' => true,
        'cantSplit' => true,
    ],
    "rowstyle"   => [
        "cantSplit" => true,
    ],
    "col1Width"  => 6000,
    "col2Width"  => 2000,
    "col3Width"  => 2000,
    "col4Width"  => 4000,
    "row"        => (object)[
        "rowheight" => null,
        "labelcell" => (object)[
            "fontStyle"      => 'bold_text',
            "paragraphStyle" => 'nospacing_rightalign'
        ],
        "valuecell" => (object)[
            "fontStyle"      => null,
            "paragraphStyle" => 'nospacing'
        ]
    ]
];

$grossMarginTable = (object)[
    "rowheader"    => [
        'tblHeader' => true,
        'cantSplit' => true,
    ],
    "rowstyle"     => [
        "cantSplit" => true,
    ],
    "tablestyle"   => [
        'cellMarginTop'     => 50,
        'cellMarginRight'   => 200,
        'cellMarginBottom'  => 50,
        'cellMarginright'   => 50,
        'borderBottomSize'  => 10,
        'borderBottomColor' => 'black',
    ],
    "colSpanWidth" => 5000,
    "col1Width"    => 4000,
    "col2Width"    => 1200,
    "col3Width"    => 1200,
    "col4Width"    => 1200,
    "col5Width"    => 1200,
    "col6Width"    => 1200,
    "col7Width"    => 1200,
    "col8Width"    => 1200,
    "col9Width"    => 1200,
    "col10Width"   => 1200,
    "col11Width"   => 1200,
    "leftalign"    => "nospacing",
    "centeralign"  => "nospacing_centeralign",
    "rightalign"   => "nospacing_rightalign",
    "header"       => (object)[
        "rowheight"       => null,
        "fontStyle"       => "table_header",
        "headercelllarge" => [
            "borderTopSize"   => 1,
            "borderRightSize" => 1,
            "borderLeftSize"  => 1,
            "bgColor"         => $header_color,
            "valign"          => "center",
            "gridSpan"        => 5,
        ],
        "headercellsmall" => [
            "borderTopSize"   => 1,
            "borderRightSize" => 1,
            "borderLeftSize"  => 1,
            "bgColor"         => $header_color,
            "valign"          => "center",
            "gridSpan"        => 2,
        ],
        "cell"            => [
            "borderTopSize"   => 1,
            "borderRightSize" => 1,
            "borderLeftSize"  => 1,
            "bgColor"         => $header_color,
            "valign"          => "center",
        ],
        "nobottomborder"  => [
            "borderTopSize"   => 1,
            "borderRightSize" => 1,
            "borderLeftSize"  => 1,
            "bgColor"         => $header_color,
            "valign"          => "center"
        ],
        "notopborder"     => [
            "borderRightSize"  => 1,
            "borderBottomSize" => 1,
            "borderLeftSize"   => 1,
            "bgColor"          => $header_color,
            "valign"           => "center",
        ]
    ],
    "row"          => (object)[
        "rowheight"     => null,
        "fontStyle"     => 'table_body',
        "cell"          => [
            "borderTopSize"    => 1,
            "borderRightSize"  => 1,
            "borderBottomSize" => 1,
            "borderLeftSize"   => 1,
            "valign"           => "center",
            "cantSplit"        => true,
        ],
        "highlightcell" => [
            "borderTopSize"    => 1,
            "borderRightSize"  => 1,
            "borderBottomSize" => 1,
            "borderLeftSize"   => 1,
            "bgColor"          => $highlight_color,
            "valign"           => "center"
        ]
    ],
    "footer"       => (object)[
        "rowheight" => null,
        "fontStyle" => 'table_footer',
        "cell"      => [
            "borderTopSize"    => 1,
            "borderRightSize"  => 1,
            "borderBottomSize" => 1,
            "borderLeftSize"   => 1,
            "valign"           => "center",
        ],
        "cellSpan3" => [
            "borderTopSize"    => 1,
            "borderRightSize"  => 1,
            "borderBottomSize" => 1,
            "borderLeftSize"   => 1,
            "valign"           => "center",
            "gridSpan"         => 3,
        ],
        "cellSpan2" => [
            "borderTopSize"    => 1,
            "borderRightSize"  => 1,
            "borderBottomSize" => 1,
            "borderLeftSize"   => 1,
            "valign"           => "center",
            "gridSpan"         => 2,
        ]
    ]
];

/**
 * Here we put all our table styles into an object that gets passed to each of
 * the view scripts
 */
$styles = (object)[
    "tables" => (object)[
        "settings"    => $settingsTable,
        "grossMargin" => $grossMarginTable
    ]
];

/**
 * An array of view variables to pass to the partial scripts
 */
$data = [
    "phpword"             => $phpword,
    "assessmentViewModel" => $assessmentViewModel,
    "section"             => $mainSection,
    "styles"              => $styles,
    "brandName"           => My_Brand::getDealerBranding()->mpsProgramName,
    "companyName"         => My_Brand::getDealerBranding()->shortDealerName
];

/**
 * Render each of the view scripts for different parts of the document
 */
$this->partial("report/grossmargin/docx/01_header.phtml", $data);
$this->partial("report/grossmargin/docx/02_maintable.phtml", $data);

$objWriter = \PhpOffice\PhpWord\IOFactory::createWriter($phpword, 'Word2007');
$objWriter->save($this->savePath);

/**
 * Finally we write out the url to the file we just generated.
 */
if (Zend_Controller_Front::getInstance()->getRequest()->isXmlHttpRequest()) echo $this->baseUrl($this->publicFileName);
else header('Location: '.$this->baseUrl($this->publicFileName));
