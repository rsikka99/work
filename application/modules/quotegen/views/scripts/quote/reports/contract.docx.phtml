<?php
use MPSToolbox\Legacy\Modules\QuoteGenerator\Models\ContractTemplateModel;
use MPSToolbox\Legacy\Modules\QuoteGenerator\Models\ContractSectionModel;
use MPSToolbox\Legacy\Modules\QuoteGenerator\Models\QuoteModel;

/**
 * Creates a brand new section
 *
 * @param \PhpOffice\PhpWord\PhpWord           $phpWord
 * @param \PhpOffice\PhpWord\Element\Section[] $sections
 * @param string                               $sectionName
 *
 * @return mixed
 */
function getNewSection ($phpWord, &$sections, $sectionName = 'default')
{
    if (!isset($sections[$sectionName]))
    {
        $section                = $phpWord->addSection(array(
            'orientation'  => null,
            'marginLeft'   => 300,
            'marginRight'  => 300,
            'marginTop'    => 300,
            'marginBottom' => 300
        ));
        $sections[$sectionName] = $section;
    }

    return $sections[$sectionName];
}

/**
 * @var $sections \PhpOffice\PhpWord\Element\Section[]
 */
$sections = array();

/* @var $contractTemplate ContractTemplateModel */
$contractTemplate = $this->contractTemplate;
$filename         = $this->filename;
$savePath         = PUBLIC_PATH . '/downloads/' . $filename;
$linkToFile       = $this->baseUrl('/downloads/' . $filename);

// This may not need to be removed from here
// Base path to the files used to render the document
$basePath            = 'quote/reports/contract/docx';
$commonPartsBasePath = 'quote/reports/common/' . $this->App()->theme . '/docx/contract';

/* @var $quote QuoteModel */
$this->quote = $this->Quote();
$quote       = $this->quote;

/* @var $phpWord \PhpOffice\PhpWord\PhpWord */
$phpWord = $this->phpword;
$phpWord->setDefaultFontName('Consolas');

/**
 * Document Properties
 */
$properties = $phpWord->getDocumentProperties();
$properties->setCreator('Demo Report');
$properties->setCompany('Demo Report');
$properties->setTitle('Demo Report');
$properties->setDescription('Demo Report');
$properties->setCategory('Demo Report');
$properties->setLastModifiedBy('Demo Report');
$properties->setCreated(time());
$properties->setModified(time());
$properties->setSubject('Demo Report');
$properties->setKeywords('demo, assessment, report');

$section       = getNewSection($phpWord, $sections);
$this->section = $section;


// Styles hold color schema and theme specific attributes
$this->render("{$commonPartsBasePath}/styles.phtml");
// Section data is the holds the wording of the documents
$this->render("{$commonPartsBasePath}/sectionData.phtml");
// Page holds all dynamic quote data
$this->render("{$basePath}/quoteData.phtml");
// Page holds all the formatting for the styles used building the document
$this->render("{$basePath}/formattingStyles.phtml");


$contractTemplateSections = $contractTemplate->getContractTemplateSections();

$contractTemplateSectionBySectionId = array();
foreach ($contractTemplateSections as $contractTemplateSection)
{
    if ($contractTemplateSection->enabled && !isset($contractTemplateSectionBySectionId[$contractTemplateSection->contractSectionId]))
    {
        $contractTemplateSectionBySectionId[$contractTemplateSection->contractSectionId] = $contractTemplateSection;
    }
}

/**
 * Render the different sections if they've appeared
 */

$defaultData = array(
    "section"        => $section,
    "tableStyle"     => $this->tableStyle,
    "fontStyle"      => $this->fontStyle,
    "cellStyle"      => $this->cellStyle,
    "paragraphStyle" => $this->paragraphStyle,
    "header"         => $this->header,
    "leaseDetails"   => $this->leaseDetails,
    "company"        => $this->company,
    "quote"          => $this->quote,
);

/*
 * Great America contract sections
 */

/**
 * Customer ("you" or "your")
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_CUSTOMER_YOU_YOUR]))
{
    $this->partial("{$basePath}/great-america/customer-you-your.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_CUSTOMER_YOU_YOUR],])
    );

    if (!isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_VENDOR]))
    {
        $section->addTextBreak();
    }
}


/**
 * Vendor Statement
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_VENDOR]))
{
    $this->partial("{$basePath}/great-america/vendor.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_VENDOR],])
    );
    $section->addTextBreak();
}

/**
 * Contract
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_CONTRACT]))
{
    $this->partial("{$basePath}/great-america/contract.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_CONTRACT],])
    );
    $section->addTextBreak();
}

/**
 * MPS Contract Details
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_MPS_CONTRACT_DETAILS]))
{
    $this->partial("{$basePath}/great-america/mps-contract-details.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_MPS_CONTRACT_DETAILS],])
    );
    $section->addTextBreak();
}

/**
 * Hardware Contract Details
 */
//if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_HARDWARE_CONTRACT_DETAILS]))
//{
//    $this->partial("{$basePath}/great-america/hardware-contract-details.phtml", array_merge(
//            $defaultData,
//            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_HARDWARE_CONTRACT_DETAILS],])
//    );
//    $section->addTextBreak();
//}
//
/**
 * Customer's Authorized Signature - Signature Box
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_CUSTOMERS_AUTH_SIGNATURE]))
{
    $this->partial("{$basePath}/great-america/customers-authorizing-signature.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_CUSTOMERS_AUTH_SIGNATURE],])
    );
    $section->addTextBreak();
}

/**
 * Owner ("we", "us", "our") - Signature Box
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_OWNER_WE_US_OUR]))
{
    $this->partial("{$basePath}/great-america/owner-we-us-our.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_OWNER_WE_US_OUR],])
    );
    $section->addTextBreak();
}

/**
 * Unconditional Guaranty - Signature Boxes
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_UNCONDITIONAL_GUARANTY]))
{
    $this->partial("{$basePath}/great-america/unconditional-guaranty.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_UNCONDITIONAL_GUARANTY],])
    );
    $section->addTextBreak();
}


/**
 * Equipment List
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_EQUIPMENT_LIST]))
{
    $equipmentSection = getNewSection($phpWord, $sections, 'equipment');

    $this->partial("{$basePath}/great-america/equipment-list.phtml", array_merge(
            $defaultData,
            ["section" => $equipmentSection, "contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_EQUIPMENT_LIST],])
    );
}

/**
 * Additional Terms and Conditions
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_ADDITIONAL_TERMS_AND_CONDITIONS]))
{
    $termsAndConditionsSection = getNewSection($phpWord, $sections, 'terms-and-conditions');

    $this->partial("{$basePath}/great-america/additional-terms-and-conditions.phtml", array_merge(
            $defaultData,
            ["section" => $termsAndConditionsSection, "contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_GA_ADDITIONAL_TERMS_AND_CONDITIONS],])
    );
}

/*
 * De Lage Landen contract sections
 */

/**
 * Lessee Information
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_LESSEE_INFO]))
{
    $this->partial("{$basePath}/de-lage-landen/lessee-information.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_LESSEE_INFO],])
    );
}


/**
 * Payment Information
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_PAYMENT_INFO]))
{
    $this->partial("{$basePath}/de-lage-landen/payment-information.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_PAYMENT_INFO],])
    );
}

/**
 * Lessee Signature
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_LESSEE_SIGNATURE]))
{
    $this->partial("{$basePath}/de-lage-landen/lessee-signature.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_LESSEE_SIGNATURE],])
    );
}

/**
 * Lessor
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_LESSOR_SIGNATURE]))
{
    $this->partial("{$basePath}/de-lage-landen/lessor-signature.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_LESSOR_SIGNATURE],])
    );
}

/**
 * Acceptance
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_ACCEPTANCE]))
{
    $this->partial("{$basePath}/de-lage-landen/acceptance.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_ACCEPTANCE],])
    );
}

/**
 * Guaranty
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_GUARANTY]))
{
    $this->partial("{$basePath}/de-lage-landen/guaranty.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_GUARANTY],])
    );
}


/**
 * Terms and Conditions
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_TERMS_AND_CONDITIONS]))
{
    $this->partial("{$basePath}/de-lage-landen/terms-and-conditions.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_TERMS_AND_CONDITIONS],])
    );
}


/**
 * Schedule (Device List)
 */
if (isset($contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_SCHEDULE]))
{
    $this->partial("{$basePath}/de-lage-landen/schedule.phtml", array_merge(
            $defaultData,
            ["contractTemplateSection" => $contractTemplateSectionBySectionId[ContractSectionModel::SECTION_DLL_SCHEDULE],])
    );
}

$objWriter = \PhpOffice\PhpWord\IOFactory::createWriter($phpWord, 'Word2007');

try
{
    $objWriter->save($savePath);
}
catch (Exception $e)
{
    \Tangent\Logger\Logger::logException($e);
    echo "There was an error while trying to write your document to disk. Trace ID: " . \Tangent\Logger\Logger::getUniqueId();
    die();
}

echo $this->baseUrl($linkToFile);